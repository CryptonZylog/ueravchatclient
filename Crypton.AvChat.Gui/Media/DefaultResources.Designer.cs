//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Crypton.AvChat.Gui.Media {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DefaultResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DefaultResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Crypton.AvChat.Gui.Media.DefaultResources", typeof(DefaultResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to body
        ///{
        ///    padding: 0;
        ///    margin: 0;
        ///    color:white;
        ///}
        ///#messageList
        ///{
        ///    list-style-type: none;
        ///    line-height:150%;
        ///    margin: 8px;
        ///    padding: 0;
        ///    padding-bottom:8px;
        ///}
        ///.date
        ///{
        ///    color:gray; /* overriden by self user color */
        ///    cursor:pointer;
        ///}
        ///.message
        ///{
        ///    color:white; /* overriden by user custom color */
        ///}
        ///.username 
        ///{
        ///    color:white;
        ///}.
        /// </summary>
        internal static string base_css {
            get {
                return ResourceManager.GetString("base_css", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap connect {
            get {
                object obj = ResourceManager.GetObject("connect", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cross {
            get {
                object obj = ResourceManager.GetObject("cross", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap disconnect {
            get {
                object obj = ResourceManager.GetObject("disconnect", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap hourglass {
            get {
                object obj = ResourceManager.GetObject("hourglass", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*! jQuery v1.7.2 jquery.com | jquery.org/license */
        ///(function(a,b){function cy(a){return f.isWindow(a)?a:a.nodeType===9?a.defaultView||a.parentWindow:!1}function cu(a){if(!cj[a]){var b=c.body,d=f(&quot;&lt;&quot;+a+&quot;&gt;&quot;).appendTo(b),e=d.css(&quot;display&quot;);d.remove();if(e===&quot;none&quot;||e===&quot;&quot;){ck||(ck=c.createElement(&quot;iframe&quot;),ck.frameBorder=ck.width=ck.height=0),b.appendChild(ck);if(!cl||!ck.createElement)cl=(ck.contentWindow||ck.contentDocument).document,cl.write((f.support.boxModel?&quot;&lt;!doctype html&gt;&quot;:&quot;&quot;)+&quot;&lt;html&gt;&lt;body&gt;&quot;),cl.clo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_min {
            get {
                return ResourceManager.GetString("jquery_min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function quoteText(dateRef) {
        ///    var msgBody = $(dateRef).parent().find(&quot;.message&quot;);
        ///    window.external.quoteText(msgBody.text());
        ///    return false;
        ///}.
        /// </summary>
        internal static string window {
            get {
                return ResourceManager.GetString("window", resourceCulture);
            }
        }
    }
}
